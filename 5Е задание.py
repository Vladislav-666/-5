

 #1Е Задание
def letter_stat(our_str):
    j=set(list(our_str)) # Присваиваем переменной j значения строки
    d={}
    for a in j:
        d[a]=our_str.count(a)  # Получаем номер ключа и упаковываем его в значение ключа
    return d

data = ['letter', "honduras", "тегусигальпа", "автотестирование", "тензор", "управлениекачеством", 'мануальщик', '',
        'курс', 'ы', 'лол', 'кек']

test_data = [{'l': 1, 'e': 2, 't': 2, 'r': 1}, {'h': 1, 'o': 1, 'n': 1, 'd': 1, 'u': 1, 'r': 1, 'a': 1, 's': 1},
             {'т': 1, 'е': 1, 'г': 2, 'у': 1, 'с': 1, 'и': 1, 'а': 2, 'л': 1, 'ь': 1, 'п': 1},
              {'а': 2, 'в': 2, 'т': 3, 'о': 2, 'е': 2, 'с': 1, 'и': 2, 'р': 1, 'н': 1},
             {'т': 1, 'е': 1, 'н': 1, 'з': 1, 'о': 1, 'р': 1},
             {'у': 1, 'п': 1, 'р': 1, 'а': 2, 'в': 2, 'л': 1, 'е': 3, 'н': 1, 'и': 1, 'к': 1,
              'ч': 1, 'с': 1, 'т': 1, 'о': 1, 'м': 1},
             {'м': 1, 'а': 2, 'н': 1, 'у': 1, 'л': 1, 'ь': 1, 'щ': 1, 'и': 1, 'к': 1},
             {},
             {'к': 1, 'у': 1, 'р': 1, 'с': 1},
             {'ы': 1}, {'л': 2, 'о': 1}, {'к': 2, 'е': 1}
             ]

for i, d in enumerate(data):
    assert letter_stat(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')


#2Е Задание
def repeats(our_str):
        counts = {}
        new_str = ''
        for char in our_str:   # берем код итой строки
            counts[char] = counts.get(char, 0) + 1 # перебираем значения и джобавляем новое
            new_str += f"{char}_{counts[char]}" # присваиваем сумму значений строк
        return new_str

data = ['letter', "карабасбарабас", "околоводопроводного", "еженедельное", "Караганда", "контрреформатор",
        'аббревиатура', '', 'чечевичечка', 'колокольчик', 'контрреволюционер', 'длинношеее']

test_data = ['l_1e_1t_1t_2e_2r_1',
             'к_1а_1р_1а_2б_1а_3с_1б_2а_4р_2а_5б_3а_6с_2',
             'о_1к_1о_2л_1о_3в_1о_4д_1о_5п_1р_1о_6в_2о_7д_2н_1о_8г_1о_9',
             'е_1ж_1е_2н_1е_3д_1е_4л_1ь_1н_2о_1е_5',
             'К_1а_1р_1а_2г_1а_3н_1д_1а_4',
             'к_1о_1н_1т_1р_1р_2е_1ф_1о_2р_3м_1а_1т_2о_3р_4',
             'а_1б_1б_2р_1е_1в_1и_1а_2т_1у_1р_2а_3',
             '',
             'ч_1е_1ч_2е_2в_1и_1ч_3е_3ч_4к_1а_1',
             'к_1о_1л_1о_2к_2о_3л_2ь_1ч_1и_1к_3',
             'к_1о_1н_1т_1р_1р_2е_1в_1о_2л_1ю_1ц_1и_1о_3н_2е_2р_3',
             'д_1л_1и_1н_1н_2о_1ш_1е_1е_2е_3'
             ]

for i, d in enumerate(data):
    assert repeats(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')




#3Е Задание

def everything_for_your_cat(cats_data):
    owners = {}  # создаем пустой список владельцев
    for cat_data in cats_data:
        cat_name, cat_age, owner_name, owner_surname = cat_data  # присваиваем значению cat_data последовательность
        owner_full_name = f"{owner_name} {owner_surname}" # создаем ячейку Имя + фамилия
        if owner_full_name not in owners:
            owners[owner_full_name] = [] # добавляем значение в список
        owners[owner_full_name].append((cat_name, cat_age)) # Добавляем в конец списка имя кота и возраст

    our_str = ""
    for owner, cats in owners.items(): # задаем парвы
        cat_strings = [f"{cat_name}, {cat_age}" for cat_name, cat_age in cats]
        our_str += f"{owner}: {'; '.join(cat_strings)}\n" # выводим строку с значениями
    return our_str.strip() # убираем лишние пробелы

data = [[('Мартин', 5, 'Алексей', 'Егоров'),
         ('Фродо', 3, 'Анна', 'Самохина'),
         ('Вася', 4, 'Алексей', 'Егоров')],
        [('Мартин', 5, 'Алексей', 'Егоров'),
         ('Фродо', 3, 'Анна', 'Самохина'),
         ('Вася', 4, 'Андрей', 'Белов'),
         ('Муся', 7, 'Игорь', 'Бероев'),
         ('Изольда', 2, 'Игорь', 'Бероев'),
         ('Снейп', 1, 'Марина', 'Апраксина'),
         ('Лютик', 4, 'Виталий', 'Соломин'),
         ('Снежок', 3, 'Марина', 'Апраксина'),
         ('Марта', 5, 'Сергей', 'Колесников'),
         ('Буся', 12, 'Алена', 'Федорова'),
         ('Джонни', 10, 'Игорь', 'Андропов'),
         ('Мурзик', 1, 'Даниил', 'Невзоров'),
         ('Барсик', 2, 'Виталий', 'Соломин'),
         ('Рыжик', 7, 'Владимир', 'Медведев'),
         ('Матильда', 8, 'Андрей', 'Белов'),
         ('Гарфилд', 3, 'Александр', 'Березуев')],
        [('Мартин', 5, 'Алексей', 'Егоров'),
         ('Фродо', 3, 'Анна', 'Самохина'),
         ('Вася', 4, 'Андрей', 'Белов'),
         ('Муся', 7, 'Игорь', 'Бероев'),
         ('Изольда', 2, 'Игорь', 'Бероев'),
         ('Снейп', 1, 'Игорь', 'Бероев'),
         ('Лютик', 4, 'Игорь', 'Бероев'),
         ('Снежок', 3, 'Игорь', 'Бероев'),
         ('Марта', 5, 'Андрей', 'Белов'),
         ('Буся', 12, 'Анна', 'Самохина'),
         ('Джонни', 10, 'Андрей', 'Белов'),
         ('Мурзик', 1, 'Алексей', 'Егоров'),
         ('Барсик', 2, 'Андрей', 'Белов'),
         ('Рыжик', 7, 'Анна', 'Самохина'),
         ('Матильда', 8, 'Андрей', 'Белов'),
         ('Гарфилд', 3, 'Алексей', 'Егоров')],
        [], [('Гарфилд', 3, 'Алексей', 'Егоров')]
        ]

test_data = ['''Алексей Егоров: Мартин, 5; Вася, 4
Анна Самохина: Фродо, 3''',
             '''Алексей Егоров: Мартин, 5
Анна Самохина: Фродо, 3
Андрей Белов: Вася, 4; Матильда, 8
Игорь Бероев: Муся, 7; Изольда, 2
Марина Апраксина: Снейп, 1; Снежок, 3
Виталий Соломин: Лютик, 4; Барсик, 2
Сергей Колесников: Марта, 5
Алена Федорова: Буся, 12
Игорь Андропов: Джонни, 10
Даниил Невзоров: Мурзик, 1
Владимир Медведев: Рыжик, 7
Александр Березуев: Гарфилд, 3''',
             '''Алексей Егоров: Мартин, 5; Мурзик, 1; Гарфилд, 3
Анна Самохина: Фродо, 3; Буся, 12; Рыжик, 7
Андрей Белов: Вася, 4; Марта, 5; Джонни, 10; Барсик, 2; Матильда, 8
Игорь Бероев: Муся, 7; Изольда, 2; Снейп, 1; Лютик, 4; Снежок, 3''', '', '''Алексей Егоров: Гарфилд, 3''']

for i, d in enumerate(data):
    assert everything_for_your_cat(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')










#4Е Задание
def scrabble(word):
    points = 0
    points_dict = {
        1: "авеинорстё",
        2: "дклмпу",
        3: "бгья",
        4: "йы",
        5: "жзхцч",
        8: "фшэю",
        10: "щ",
        15: "ъ"
    } # Словарем, как просилис)
    for letter in word:   # перебераем буквы слова
        for point, letters in points_dict.items(): # перебираем пары из словаря
            if letter in letters: # проверяем к какому очку предаблежит буква 
                points += point # добавляем очко буквы
                break  # поврторяем все что выше на следующей буквке
    return points

data = ["курс", 'авеинорстё', 'дклмпеу', 'бгья', 'йы', 'жзхцч', 'фшэю', 'щъ', "карабасбарабас", "околоводопроводного",
        "еженедельное", 'эхоэнцефалограф', 'человеконенавистничество', 'делопроизводительница']

test_data = [6, 10, 13, 12, 8, 25, 32, 25, 21, 26, 20, 54, 34, 36]

for i, d in enumerate(data):
    assert scrabble(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')  
